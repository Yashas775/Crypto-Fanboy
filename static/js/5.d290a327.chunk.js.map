{"version":3,"sources":["components/fav_page.js"],"names":["numberWithCommas","x","toString","replace","FavCoinsTable","useState","setCoins","loading","setLoading","page","CryptoState","currency","symbol","user","setAlert","watchlist","setWatchlist","classes","makeStyles","row","backgroundColor","cursor","fontFamily","pagination","color","useStyles","addToWatchlist","useHistory","a","findIndex","ele","id","push","coinRef","doc","db","uid","setDoc","items","merge","open","message","name","type","removeFromWatchlist","filter","darkTheme","createTheme","palette","primary","main","fetchCoins","axios","get","CoinList","data","useEffect","theme","style","textAlign","variant","margin","component","Paper","map","head","fontWeight","align","slice","index","profit","price_change_percentage_24h","className","scope","display","gap","src","image","alt","height","marginBottom","flexDirection","textTransform","fontSize","current_price","toFixed","market_cap","width","onClick"],"mappings":"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","file":"static/js/5.d290a327.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { Button } from \"@material-ui/core\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { onSnapshot } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\n\nimport {\n  Container,\n  createTheme,\n  TableCell,\n  LinearProgress,\n  ThemeProvider,\n  Typography,\n  TextField,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableContainer,\n  Table,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { CoinList } from \"../config/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { CryptoState } from \"../CryptoContext\";\n\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default function FavCoinsTable() {\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [coin, setCoin] = useState();\n\n  const { currency, symbol, user, setAlert, watchlist, setWatchlist } =\n    CryptoState();\n\n  const useStyles = makeStyles({\n    row: {\n      backgroundColor: \"#16171a\",\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: \"#131111\",\n      },\n      fontFamily: \"Montserrat\",\n    },\n    pagination: {\n      \"& .MuiPaginationItem-root\": {\n        color: \"gold\",\n      },\n    },\n  });\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const addToWatchlist = async (row) => {\n    let state = watchlist.findIndex((ele) => ele.id === row.id);\n\n    if (state === -1) {\n      watchlist.push(row);\n\n      const coinRef = doc(db, \"favs\", user.uid);\n\n      try {\n        await setDoc(coinRef, { items: watchlist }, { merge: true });\n\n        setAlert({\n          open: true,\n          message: `${row.name} Added to the Favs !`,\n          type: \"success\",\n        });\n      } catch (error) {\n        setAlert({\n          open: true,\n          message: error.message,\n          type: \"error\",\n        });\n      }\n    }\n  };\n\n  const removeFromWatchlist = async (row) => {\n    setWatchlist(watchlist.filter((ele) => ele.id !== row.id));\n\n    try {\n      const coinRef = doc(db, \"favs\", user.uid);\n      await setDoc(\n        coinRef,\n        { items: watchlist.filter((ele) => ele.id !== row.id) },\n        { merge: true }\n      );\n\n      setAlert({\n        open: true,\n        message: `${row.name} Removed from the Watchlist !`,\n        type: \"success\",\n      });\n    } catch (error) {\n      setAlert({\n        open: true,\n        message: error.message,\n        type: \"error\",\n      });\n    }\n  };\n\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const { data } = await axios.get(CoinList(currency));\n\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCoins();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n\n  const handleSearch = () => {\n    return coins.filter(\n      (coin) =>\n        coin.name.toLowerCase().includes(search) ||\n        coin.symbol.toLowerCase().includes(search)\n    );\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Container style={{ textAlign: \"center\" }}>\n        <Typography\n          variant=\"h4\"\n          style={{ margin: 18, fontFamily: \"Montserrat\" }}\n        >\n          Cryptocurrency Prices\n        </Typography>\n\n        <TableContainer component={Paper}>\n          {loading ? (\n            <LinearProgress style={{ backgroundColor: \"#7678ed\" }} />\n          ) : (\n            <Table aria-label=\"simple table\">\n              <TableHead style={{ backgroundColor: \"#7678ed\" }}>\n                <TableRow>\n                  {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\", \" \"].map(\n                    (head) => (\n                      <TableCell\n                        style={{\n                          color: \"white\",\n                          fontWeight: \"700\",\n                          fontFamily: \"Montserrat\",\n                        }}\n                        key={head}\n                        align={head === \"Coin\" ? \"\" : \"right\"}\n                      >\n                        {head}\n                      </TableCell>\n                    )\n                  )}\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {watchlist\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)\n                  .map((row) => {\n                    let index = watchlist.findIndex((ele) => ele.id === row.id);\n\n                    const profit = row.price_change_percentage_24h > 0;\n                    return (\n                      <TableRow className={classes.row} key={row.name}>\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          style={{\n                            display: \"flex\",\n                            gap: 15,\n                          }}\n                        >\n                          <img\n                            src={row?.image}\n                            alt={row.name}\n                            height=\"50\"\n                            style={{ marginBottom: 10 }}\n                          />\n                          <div\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\n                          >\n                            <span\n                              style={{\n                                textTransform: \"uppercase\",\n                                fontSize: 22,\n                              }}\n                            >\n                              {row.symbol}\n                            </span>\n                            <span style={{ color: \"darkgrey\" }}>\n                              {row.name}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{\" \"}\n                          {numberWithCommas(row.current_price.toFixed(2))}\n                        </TableCell>\n                        <TableCell\n                          align=\"right\"\n                          style={{\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                            fontWeight: 500,\n                          }}\n                        >\n                          {profit && \"+\"}\n                          {row.price_change_percentage_24h.toFixed(2)}%\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{\" \"}\n                          {numberWithCommas(\n                            row.market_cap.toString().slice(0, -6)\n                          )}\n                          M\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {\n                            <Button\n                              variant=\"outlined\"\n                              style={{\n                                width: \"100\",\n                                height: 40,\n                                backgroundColor:\n                                  index !== -1 ? \"#ef233c\" : \"#7678ed\",\n                                color: index !== -1 ? \"white\" : \"black\",\n                              }}\n                              onClick={\n                                index !== -1\n                                  ? () => removeFromWatchlist(row)\n                                  : () => addToWatchlist(row)\n                              }\n                            >\n                              {index !== -1 ? \"Untrack\" : \"track\"}\n                            </Button>\n                          }\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          )}\n        </TableContainer>\n        <div\n          style={{\n            width: \"100\",\n            height: 40,\n          }}\n        ></div>\n        {/* Comes from @material-ui/lab */}\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}